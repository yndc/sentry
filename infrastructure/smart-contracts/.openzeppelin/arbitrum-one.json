{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD88c8E0aE21beA6adE41A41130Bb4cd43e6b1723",
    "txHash": "0x55e691396eee04d027475a286bc7958fcf84e41eafd7b97cfbbb8f2e30784a21"
  },
  "proxies": [
    {
      "address": "0x4Cb9a7AE498CEDcBb5EAe9f25736aE7d428C9D66",
      "txHash": "0xc14906c43e70419dc54c9500a5cf5e6bbc1c007546454729f1df52fd87ea2008",
      "kind": "transparent"
    },
    {
      "address": "0x4C749d097832DE2FEcc989ce18fDc5f1BD76700c",
      "txHash": "0x850cf4c97133bbb8bee24af8e8b47f116b3e8f512df7495855629d70006a6f60",
      "kind": "transparent"
    },
    {
      "address": "0x94F4aBC83eae00b693286B6eDCa09e1D76183C97",
      "txHash": "0x27bfccd3c53bc633ff2c6a39fcb5fbf16af67dc64f9d0d52ede0b3e560c569aa",
      "kind": "transparent"
    },
    {
      "address": "0xfD41041180571C5D371BEA3D9550E55653671198",
      "txHash": "0xd22a7b97d2044a20b20a8105857d435ba98254e2a147c0890140ffe3fc55ebdf",
      "kind": "transparent"
    },
    {
      "address": "0xbc14d8563b248B79689ECbc43bBa53290e0b6b66",
      "txHash": "0x1e84fa92f23fbccf9cf1643c17925016357a95e123d7d14cc9a77d029d8dbac2",
      "kind": "transparent"
    }
  ],
  "impls": {
    "afb1ba2ea7f1a618ab1b27873accbeec29f04cbb3a4be48f67d69f72ae9e4d68": {
      "address": "0x3fB787101DC6Be47cfe18aeEe15404dcC842e6AF",
      "txHash": "0xc7c22bc003ff4091f7b1749a576d001ca69f6af3df18b88d18237c9ffac06dce",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "esXaiAddress",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Xai",
            "src": "contracts/Xai.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)500_storage",
            "contract": "Xai",
            "src": "contracts/Xai.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8d263fa6c3e019a737b9f647f6e9af853b076c6627f6d4b242c971c942948515": {
      "address": "0x8d6C063656b00E5c37CE007C0f99848D58F19d6B",
      "txHash": "0xcca616bf1471ddfb59a6a9156a4a94aa47ebff5f3d47b1cc583702aaaeb100d7",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_whitelist",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(AddressSet)5119_storage",
            "contract": "esXai",
            "src": "contracts/esXai.sol:19"
          },
          {
            "label": "xai",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "esXai",
            "src": "contracts/esXai.sol:21"
          },
          {
            "label": "_redemptionActive",
            "offset": 20,
            "slot": "253",
            "type": "t_bool",
            "contract": "esXai",
            "src": "contracts/esXai.sol:22"
          },
          {
            "label": "_redemptionRequests",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_array(t_struct(RedemptionRequest)8907_storage)dyn_storage)",
            "contract": "esXai",
            "src": "contracts/esXai.sol:23"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint256)500_storage",
            "contract": "esXai",
            "src": "contracts/esXai.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RedemptionRequest)8907_storage)dyn_storage": {
            "label": "struct esXai.RedemptionRequest[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(RedemptionRequest)8907_storage)dyn_storage)": {
            "label": "mapping(address => struct esXai.RedemptionRequest[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5119_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4804_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RedemptionRequest)8907_storage": {
            "label": "struct esXai.RedemptionRequest",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "startTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "completed",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4804_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b5e9aa16701a93266f6fde8da4384785ae0dc3cc22b0e524229c16ae3918e7b1": {
      "address": "0xF208798482F0b12c8767Bc03cC0F145D18BeCe6A",
      "txHash": "0xd9228c8f78fa89265a1776e60c4e8784d9f5e657483ca6ec7357b5ff4517e650",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)500_storage",
            "contract": "GasSubsidy",
            "src": "contracts/GasSubsidy.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6f32b47647c67ddb8023c8ce11951fcc5feea1bd6a6cc541c67ae3cbdf84125e": {
      "address": "0x29A7b907FdF4a9235F46d891b7Aa1e7d3D35A3b6",
      "txHash": "0x665a4f56d7ae793fbcd95ef13a76159a6e18a109bd5043e99951f5ace7aa30d7",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_roleMembers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_bytes32,t_struct(AddressSet)5119_storage)",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlEnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlEnumerableUpgradeable.sol:76"
          },
          {
            "label": "challengerPublicKey",
            "offset": 0,
            "slot": "201",
            "type": "t_bytes_storage",
            "contract": "Referee",
            "src": "contracts/Referee.sol:22"
          },
          {
            "label": "rollupAddress",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "Referee",
            "src": "contracts/Referee.sol:25"
          },
          {
            "label": "nodeLicenseAddress",
            "offset": 0,
            "slot": "203",
            "type": "t_address",
            "contract": "Referee",
            "src": "contracts/Referee.sol:28"
          },
          {
            "label": "esXaiAddress",
            "offset": 0,
            "slot": "204",
            "type": "t_address",
            "contract": "Referee",
            "src": "contracts/Referee.sol:31"
          },
          {
            "label": "xaiAddress",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "Referee",
            "src": "contracts/Referee.sol:32"
          },
          {
            "label": "challengeCounter",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "Referee",
            "src": "contracts/Referee.sol:35"
          },
          {
            "label": "gasSubsidyRecipient",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "Referee",
            "src": "contracts/Referee.sol:38"
          },
          {
            "label": "challenges",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_uint256,t_struct(Challenge)7502_storage)",
            "contract": "Referee",
            "src": "contracts/Referee.sol:41"
          },
          {
            "label": "submissions",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Submission)7473_storage))",
            "contract": "Referee",
            "src": "contracts/Referee.sol:44"
          },
          {
            "label": "isCheckingAssertions",
            "offset": 0,
            "slot": "210",
            "type": "t_bool",
            "contract": "Referee",
            "src": "contracts/Referee.sol:47"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "211",
            "type": "t_mapping(t_address,t_struct(AddressSet)5119_storage)",
            "contract": "Referee",
            "src": "contracts/Referee.sol:50"
          },
          {
            "label": "_ownersForOperator",
            "offset": 0,
            "slot": "212",
            "type": "t_mapping(t_address,t_struct(AddressSet)5119_storage)",
            "contract": "Referee",
            "src": "contracts/Referee.sol:53"
          },
          {
            "label": "_lifetimeClaims",
            "offset": 0,
            "slot": "213",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Referee",
            "src": "contracts/Referee.sol:56"
          },
          {
            "label": "rollupAssertionTracker",
            "offset": 0,
            "slot": "214",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Referee",
            "src": "contracts/Referee.sol:59"
          },
          {
            "label": "kycWallets",
            "offset": 0,
            "slot": "215",
            "type": "t_struct(AddressSet)5119_storage",
            "contract": "Referee",
            "src": "contracts/Referee.sol:62"
          },
          {
            "label": "_allocatedTokens",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "Referee",
            "src": "contracts/Referee.sol:65"
          },
          {
            "label": "_gasSubsidyPercentage",
            "offset": 0,
            "slot": "218",
            "type": "t_uint256",
            "contract": "Referee",
            "src": "contracts/Referee.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "219",
            "type": "t_array(t_uint256)500_storage",
            "contract": "Referee",
            "src": "contracts/Referee.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)5119_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AddressSet)5119_storage)": {
            "label": "mapping(bytes32 => struct EnumerableSetUpgradeable.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_struct(Submission)7473_storage))": {
            "label": "mapping(uint256 => mapping(uint256 => struct Referee.Submission))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Challenge)7502_storage)": {
            "label": "mapping(uint256 => struct Referee.Challenge)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Submission)7473_storage)": {
            "label": "mapping(uint256 => struct Referee.Submission)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)5119_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4804_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Challenge)7502_storage": {
            "label": "struct Referee.Challenge",
            "members": [
              {
                "label": "openForSubmissions",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "expiredForRewarding",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "assertionId",
                "type": "t_uint64",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "assertionStateRootOrConfirmData",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assertionTimestamp",
                "type": "t_uint64",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "challengerSignedHash",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "activeChallengerPublicKey",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "rollupUsed",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "totalSupplyOfNodesAtChallengeStart",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "rewardAmountForClaimers",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "amountForGasSubsidy",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "numberOfEligibleClaimers",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "amountClaimedByClaimers",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)4804_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Submission)7473_storage": {
            "label": "struct Referee.Submission",
            "members": [
              {
                "label": "submitted",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "claimed",
                "type": "t_bool",
                "offset": 1,
                "slot": "0"
              },
              {
                "label": "eligibleForPayout",
                "type": "t_bool",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "nodeLicenseId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "assertionStateRootOrConfirmData",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7535b98e0f32b8bd7fc635cd3890f687dcb1d720846f1f592e334b212205bc3d": {
      "address": "0xf765452e587Ad0AE785Dc984963897c05d4c8c71",
      "txHash": "0x4e62d4324f6fa8f4f6e6adcdedc6860d09951077abb3c1efa2fbb8388958f504",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)3469_storage",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:13"
          },
          {
            "label": "fundsReceiver",
            "offset": 0,
            "slot": "252",
            "type": "t_address_payable",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:15"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:17"
          },
          {
            "label": "pricingTiers",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_struct(Tier)6334_storage)dyn_storage",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:20"
          },
          {
            "label": "referralDiscountPercentage",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:22"
          },
          {
            "label": "referralRewardPercentage",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:23"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "257",
            "type": "t_bool",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:26"
          },
          {
            "label": "_mintTimestamps",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:29"
          },
          {
            "label": "_promoCodes",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_string_memory_ptr,t_struct(PromoCode)6341_storage)",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:32"
          },
          {
            "label": "_referralRewards",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:35"
          },
          {
            "label": "_averageCost",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)500_storage",
            "contract": "NodeLicense",
            "src": "contracts/NodeLicense.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tier)6334_storage)dyn_storage": {
            "label": "struct NodeLicense.Tier[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(PromoCode)6341_storage)": {
            "label": "mapping(string => struct NodeLicense.PromoCode)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3469_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PromoCode)6341_storage": {
            "label": "struct NodeLicense.PromoCode",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "receivedLifetime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tier)6334_storage": {
            "label": "struct NodeLicense.Tier",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f5840c5cf6782d1d278af232719cad5251f9e7681e422340bde1bd0e6e4521fa": {
      "address": "0x471f1a92a8099f7011Aa3f2E011569618bD754EC",
      "txHash": "0x87a47f4202e8c63a28545f42306279c5236a02840f72e0ce41c27f527efc5eed",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)3728_storage",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:13"
          },
          {
            "label": "fundsReceiver",
            "offset": 0,
            "slot": "252",
            "type": "t_address_payable",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:15"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:17"
          },
          {
            "label": "pricingTiers",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_struct(Tier)45316_storage)dyn_storage",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:20"
          },
          {
            "label": "referralDiscountPercentage",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:22"
          },
          {
            "label": "referralRewardPercentage",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:23"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "257",
            "type": "t_bool",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:26"
          },
          {
            "label": "_mintTimestamps",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:29"
          },
          {
            "label": "_promoCodes",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_string_memory_ptr,t_struct(PromoCode)45323_storage)",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:32"
          },
          {
            "label": "_referralRewards",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:35"
          },
          {
            "label": "_averageCost",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)500_storage",
            "contract": "NodeLicense2",
            "src": "contracts/upgrades/node-license/NodeLicense2.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tier)45316_storage)dyn_storage": {
            "label": "struct NodeLicense2.Tier[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(PromoCode)45323_storage)": {
            "label": "mapping(string => struct NodeLicense2.PromoCode)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3728_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PromoCode)45323_storage": {
            "label": "struct NodeLicense2.PromoCode",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "receivedLifetime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tier)45316_storage": {
            "label": "struct NodeLicense2.Tier",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2897b8bc97be2617a2c26707bc0613ef3e11441452d7d07c0dca551d99e5a374": {
      "address": "0xC2b691250fD85bF7eC91Dd4f13eF1e76678395B2",
      "txHash": "0x17dd44b6fc6389bbcd7812fe6960c59b9ae922b0c9514a462816bea8496ecf16",
      "layout": {
        "solcVersion": "0.8.9",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "251",
            "type": "t_struct(Counter)3469_storage",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:13"
          },
          {
            "label": "fundsReceiver",
            "offset": 0,
            "slot": "252",
            "type": "t_address_payable",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:15"
          },
          {
            "label": "maxSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:17"
          },
          {
            "label": "pricingTiers",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_struct(Tier)13230_storage)dyn_storage",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:20"
          },
          {
            "label": "referralDiscountPercentage",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:22"
          },
          {
            "label": "referralRewardPercentage",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:23"
          },
          {
            "label": "claimable",
            "offset": 0,
            "slot": "257",
            "type": "t_bool",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:26"
          },
          {
            "label": "_mintTimestamps",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:29"
          },
          {
            "label": "_promoCodes",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_string_memory_ptr,t_struct(PromoCode)13237_storage)",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:32"
          },
          {
            "label": "_referralRewards",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:35"
          },
          {
            "label": "_averageCost",
            "offset": 0,
            "slot": "261",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "262",
            "type": "t_array(t_uint256)500_storage",
            "contract": "NodeLicense3",
            "src": "contracts/upgrades/node-license/NodeLicense3.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tier)13230_storage)dyn_storage": {
            "label": "struct NodeLicense3.Tier[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)500_storage": {
            "label": "uint256[500]",
            "numberOfBytes": "16000"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_struct(PromoCode)13237_storage)": {
            "label": "mapping(string => struct NodeLicense3.PromoCode)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3469_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PromoCode)13237_storage": {
            "label": "struct NodeLicense3.PromoCode",
            "members": [
              {
                "label": "recipient",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "receivedLifetime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Tier)13230_storage": {
            "label": "struct NodeLicense3.Tier",
            "members": [
              {
                "label": "price",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
